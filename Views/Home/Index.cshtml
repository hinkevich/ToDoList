@using ToDoList.Models.ViewModels
@model TaskListViewModel



@*<div class="text-center">
    <h1 class="display-4">Welcome</h1>
    <p>Learn about <a href="https://docs.microsoft.com/aspnet/core">building Web apps with ASP.NET Core</a>.</p>
</div>*@


@*@foreach (var task in Model.Tasks)
{
    <div>
        <p>@task.Id</p>
        <p>@task.Title</p>
    </div>

}*@

@*@await Html.PartialAsync("SidebarMenu")*@

<div class="scroll-table">
    
    <table class="table" style="width:95%">
        <thead>
            <partial name="NameOfTable" model="Model.Tasks.FirstOrDefault()" />
        </thead>
    </table>
    <div class="scroll-table-body">
        <table class="table">
            <tbody>
                <partial name="TaskSummary" model=Model.Tasks />
            </tbody>
        </table>
    </div>
    <table class="table" style="width:95%">
        <thead>
            <tr>
                <th>Completed</th>
                <th></th>
            </tr>
        </thead>
    </table>
    <div class="scroll-table-body-completed">
        <table class="table">
            <tbody>
                <partial name="TaskSummaryComplited" model=Model.Tasks />
            </tbody>
        </table>
    </div>
</div>


@*test sidebar menu*@
@*@{
    var items = ViewBag.SideBarItems;
     <div>
    @foreach (var item in items)
    {
            <p>@item.Id, @item.Name</p>
    }
    </div>
}
*@





